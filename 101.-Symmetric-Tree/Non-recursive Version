/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public static boolean isSymmetric(TreeNode root) {
			if(root==null) return true;
		Stack<TreeNode> stack = new Stack<>();
		TreeNode left, right;
		if(root.left!=null){
			if(root.right==null) return false;
			stack.push(root.right);
			stack.push(root.left);
		}else{
			if(root.right!=null) return false;
		}
		
		while(!stack.isEmpty()){
			if(stack.size()%2!=0) return false;
			left = stack.pop();
			right = stack.pop();
			if(left.val!=right.val) return false;
			else{
				if(left.left!=null){
					if(right.right==null) return false;
					stack.push(right.right);
					stack.push(left.left);
				}else{
					if(right.right!=null) return false;
				}
				
				if(left.right!=null){
					if(right.left==null) return false;
					stack.push(right.left);
					stack.push(left.right);
				}else{
					if(right.left!=null) return false;
				}
			}
		}
		return true;
    }
}
