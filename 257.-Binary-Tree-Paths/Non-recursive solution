/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
	List<String> ans = new LinkedList<>();
	if(root == null) return ans;
	
	Stack<TreeNode> stack = new Stack<>();
	Stack<String> pathStack = new Stack<>();
	
	String path = Integer.toString(root.val);
	TreeNode cur = root;
	stack.push(cur);
	pathStack.push(path);
	if(root.left==null&&root.right==null) {
		ans.add(path);
		return ans;
	}
	cur = cur.left;
	while(!stack.isEmpty()||cur!=null){
		if(cur!=null){
			path = path + "->" + Integer.toString(cur.val);
			if(cur.left==null&&cur.right==null) ans.add(path);
			stack.add(cur);
			pathStack.add(path);
			cur = cur.left;
		}else{
			
			cur = stack.pop();
			cur = cur.right;
			path = pathStack.pop();
			
		}
		
		
			
		
	}
	
	return ans;
    }
}
